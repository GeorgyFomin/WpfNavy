<Window x:Name="mainWnd" x:Class="WpfNavy.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:WpfNavy"
        xmlns:viewmodels="clr-namespace:WpfNavy.ViewModels" d:DataContext="{d:DesignInstance Type=viewmodels:MainViewModel}"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" WindowStyle="None" ResizeMode="NoResize">
    <Window.Resources>
        <!--<Style x:Key="ListViewItemStyle1" TargetType="{x:Type ListViewItem}">
            -->
        <!--
            <Setter Property="FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="0,0,0,1"/>
            <Setter Property="Padding" Value="5,2,5,2"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            -->
        <!--
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2" SnapsToDevicePixels="true">
                            <Border x:Name="InnerBorder" BorderThickness="1" CornerRadius="1">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition MaxHeight="11"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Rectangle x:Name="UpperHighlight" Fill="#75FFFFFF" Visibility="Collapsed"/>
                                    <GridViewRowPresenter Grid.RowSpan="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="#FFCCF0FF"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="Red"/>
                                <Setter Property="BorderBrush" Value="#FF98DDFB"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="#FFCFCFCF"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="#FF98DDFB"/>
                            </MultiTrigger>
                            -->
        <!--
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            -->
        <!--
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="mainBckgr" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="Black" Offset="0"/>
            <GradientStop Color="#FF082A5B" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="textColor" Color="#FF11949B"/>
        <Style x:Key="toolTipStyle" TargetType="{x:Type ToolTip}">
            <Setter Property="Background" Value="{StaticResource mainBckgr}"/>
            <Setter Property="Foreground" Value="Yellow"/>
        </Style>
        <Style x:Key="headerStyle" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Background" Value="{StaticResource mainBckgr}"/>
            <Setter Property="Foreground" Value="Yellow"/>
        </Style>
        <Style x:Key="listViewStyle" TargetType="{x:Type ListView}">
            <Setter Property="BorderBrush" Value="#FF07C75E"/>
            <Setter Property="Background" Value="{StaticResource mainBckgr}"/>
            <Setter Property="Foreground" Value="Yellow"/>
        </Style>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            -->
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>-->
        <!--
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                -->
        <!--<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>-->
        <!--
                                <Setter Property="BorderBrush" TargetName="border" Value="Cyan"/>
                                <Setter Property="BorderThickness" TargetName="border" Value="3"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                -->
        <!--
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                -->
        <!--
                                <Setter Property="Background" TargetName="border" Value="Red" />
                                -->
        <!--<Setter Property="BorderBrush" TargetName="border" Value="Red"/>
                                <Setter Property="BorderThickness" TargetName="border" Value="3"/>-->
        <!--{StaticResource Button.MouseOver.Border}-->
        <!--
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                -->
        <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>-->
        <!--
                                <Setter Property="BorderBrush" TargetName="border" Value="Green"/>
                                <Setter Property="BorderThickness" TargetName="border" Value="10"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                -->
        <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>-->
        <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>-->
        <!--
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
    </Window.Resources>
    <DockPanel Background="{StaticResource mainBckgr}">
        <DockPanel.Children>
            <DockPanel x:Name="topPanel" DockPanel.Dock="Top" Background="Transparent" Height="20">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <i:InvokeCommandAction Command="{Binding DragCommand}" CommandParameter="{Binding ElementName=mainWnd}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseRightButtonDown">
                        <i:InvokeCommandAction Command="{Binding ResetBankCommand}" CommandParameter="{Binding ElementName=mainWnd}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <TextBlock x:Name="bankName" Foreground="Gold" VerticalAlignment="Center" Text="{Binding BankName}" >
                </TextBlock>
                <StackPanel Orientation="Horizontal" FlowDirection="RightToLeft" Background="Transparent">
                    <Button x:Name="CloseButton" Background="Transparent" BorderBrush="Transparent" Style="{StaticResource ButtonStyle1}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding CloseCommand}" CommandParameter="{Binding ElementName=mainWnd}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Button.Content>
                            <StackPanel>
                                <fa:IconBlock Width="20" Padding="0 3 0 0" Icon="WindowClose" Foreground="{StaticResource textColor}"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                    <Button x:Name="Maximize" Background="Transparent" BorderBrush="Transparent">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding MaximizeCommand}" CommandParameter="{Binding ElementName=mainWnd}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Button.Content>
                            <StackPanel>
                                <fa:IconBlock x:Name="MaxIconBlock" Width="20" Padding="0 3 0 0" Icon="WindowMaximize" Foreground="{StaticResource textColor}"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                    <Button x:Name="Minimize" Background="Transparent" BorderBrush="Transparent">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding MinimizeCommand}" CommandParameter="{Binding ElementName=mainWnd}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Button.Content>
                            <StackPanel>
                                <fa:IconBlock Width="20" Padding="0 3 0 0" Icon="WindowMinimize" Foreground="{StaticResource textColor}"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                </StackPanel>
            </DockPanel>
            <Grid Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width=".25*" x:Name="col0"/>
                    <ColumnDefinition Width=".5*" x:Name="col1"/>
                    <ColumnDefinition Width="*" x:Name="col2"/>
                </Grid.ColumnDefinitions>
                <ListView x:Name="depListView" Grid.Column="0" Style="{StaticResource listViewStyle}" ItemsSource="{Binding Deps}"
                          ItemContainerStyle="{DynamicResource ListViewItemStyle1}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding DepSelectedCommand}" CommandParameter="{Binding ElementName=mainWnd}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListView.ToolTip>
                        <ToolTip  Style="{StaticResource toolTipStyle}">
                            Отделы
                        </ToolTip>
                    </ListView.ToolTip>
                    <ListView.View>
                        <GridView ColumnHeaderContainerStyle="{StaticResource headerStyle}">
                            <GridViewColumn x:Name="depNameColumn" Header="Name" DisplayMemberBinding="{Binding Name}">
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
                <ListView x:Name="clientListView" Grid.Column="1" ItemContainerStyle="{DynamicResource ListViewItemStyle1}" Style="{StaticResource listViewStyle}"
                           ItemsSource="{Binding Clients}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ClientSelectedCommand}" CommandParameter="{Binding ElementName=mainWnd}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <ListView.ToolTip>
                        <ToolTip Style="{StaticResource toolTipStyle}" >
                            Клиенты
                        </ToolTip>
                    </ListView.ToolTip>
                    <ListView.View>
                        <GridView ColumnHeaderContainerStyle="{StaticResource headerStyle}">
                            <GridViewColumn x:Name="ColClientName"  Header="Name" DisplayMemberBinding="{Binding Name}"/>
                        </GridView>
                    </ListView.View>
                </ListView>
                <ListView x:Name="accListView" Grid.Column="2" Style="{StaticResource listViewStyle}" ItemContainerStyle="{DynamicResource ListViewItemStyle1}"
                         ItemsSource="{Binding Accounts}" >
                    <ListView.ToolTip>
                        <ToolTip Style="{StaticResource toolTipStyle}">
                            Счета
                        </ToolTip>
                    </ListView.ToolTip>
                    <ListView.View>
                        <GridView ColumnHeaderContainerStyle="{StaticResource headerStyle}">
                            <GridViewColumn Header="Number" DisplayMemberBinding="{Binding Number}"/>
                            <GridViewColumn Header="Size" DisplayMemberBinding="{Binding Size}"/>
                            <GridViewColumn Header="Rate" DisplayMemberBinding="{Binding Rate}"/>
                            <GridViewColumn Header="Cap" DisplayMemberBinding="{Binding Cap}"/>
                        </GridView>
                    </ListView.View>
                </ListView>
            </Grid>
        </DockPanel.Children>
    </DockPanel>
</Window>
