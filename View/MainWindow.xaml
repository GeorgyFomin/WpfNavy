<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:WpfNavy"
    xmlns:library="clr-namespace:ClassLibrary;assembly=ClassLibrary"
        xmlns:viewmodels="clr-namespace:WpfNavy.ViewModels" 
        x:Name="mainWnd" x:Class="WpfNavy.MainWindow"
        mc:Ignorable="d" d:DataContext="{d:DesignInstance Type={x:Type viewmodels:MainViewModel}}"
        Title="MainWindow" Height="450" Width="800" WindowStyle="None" Style="{StaticResource ResourceKey=BlackNavy}">
    <Window.Resources>
        <!--<HierarchicalDataTemplate x:Key="AccountTemplate" DataType="{x:Type library:Account}" >
            <TextBlock Text="{Binding Account.Number}"/>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate x:Key="ClientTemplate" DataType="{x:Type library:Client}">
            <TreeViewItem Header="{Binding Client.Name}">
                <TreeViewItem Header="Accounts" ItemsSource="{Binding Client.Accounts}" ItemTemplate="{StaticResource AccountTemplate}"/>
            </TreeViewItem>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate x:Key="DepTemplate" DataType="{x:Type library:Dep}">
            <TreeViewItem Header="{Binding Dep.Name}">
                <TreeViewItem Header="Clients" ItemsSource="{Binding Dep.Clients}" ItemTemplate="{StaticResource ClientTemplate}"/>
            </TreeViewItem>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate x:Key="BankTemplate" DataType="{x:Type library:Bank}" ItemsSource="{Binding Bank.Deps}">
            <TreeViewItem ItemTemplate="{StaticResource DepTemplate}"/>
        </HierarchicalDataTemplate>-->
        <!--<ControlTemplate x:Key="TreeViewItemControlTemplate1" TargetType="{x:Type TreeViewItem}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="19" Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="Width" Value="16"/>
                            <Setter Property="Height" Value="16"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border Background="Transparent" Height="16" Padding="5" Width="16">
                                            <Path x:Name="ExpandPath" Data="M0,0 L0,6 L6,0 z" Fill="White" Stroke="#FF818181">
                                                <Path.RenderTransform>
                                                    <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                                </Path.RenderTransform>
                                            </Path>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                                    <Setter.Value>
                                                        <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF27C7F7"/>
                                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FFCCEEFB"/>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                    <Condition Property="IsChecked" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1CC4F7"/>
                                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FF82DFFB"/>
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                    <ContentPresenter x:Name="PART_Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Border>
                <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="False">
                    <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="HasItems" Value="False">
                    <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True"/>
                        <Condition Property="IsSelectionActive" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>-->
    </Window.Resources>
    <DockPanel>
        <StackPanel DockPanel.Dock="Top" Height="20" Background="Transparent" Orientation="Horizontal" FlowDirection="RightToLeft">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding DragCommand}" CommandParameter="{Binding ElementName=mainWnd}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Button x:Name="CloseButton" Background="Transparent" BorderBrush="Transparent" Style="{StaticResource ButtonStyle1}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding CloseCommand}" CommandParameter="{Binding ElementName=mainWnd}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <StackPanel>
                    <fa:IconBlock Width="20" Padding="0 3 0 0" Icon="WindowClose" Foreground="{StaticResource mainBtnColor}"/>
                </StackPanel>
            </Button>
            <Button x:Name="Maximize" Background="Transparent" BorderBrush="Transparent">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding MaximizeCommand}" CommandParameter="{Binding ElementName=mainWnd}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <StackPanel>
                    <fa:IconBlock x:Name="MaxIconBlock" Width="20" Padding="0 3 0 0" Icon="WindowMaximize" Foreground="{StaticResource mainBtnColor}"/>
                </StackPanel>
            </Button>
            <Button x:Name="Minimize" Background="Transparent" BorderBrush="Transparent">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding MinimizeCommand}" CommandParameter="{Binding ElementName=mainWnd}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <StackPanel>
                    <fa:IconBlock Width="20" Padding="0 3 0 0" Icon="WindowMinimize" Foreground="{StaticResource mainBtnColor}"/>
                </StackPanel>
            </Button>
            <Button Foreground="{StaticResource mainBtnColor}" Background="Transparent" BorderBrush="Transparent" Content="Random Bank">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding ResetBankCommand}" CommandParameter="{Binding ElementName=mainWnd}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
        </StackPanel>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width=".3*" x:Name="col0"/>
                <ColumnDefinition Width=".4*" x:Name="col1"/>
                <ColumnDefinition Width="*" x:Name="col2"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.ColumnSpan="3">
                <TextBlock Foreground="LightGreen" VerticalAlignment="Center" Text = "Bank "/>
                <TextBox x:Name="bankNameBox" Foreground="Yellow" Background="Transparent" VerticalAlignment="Center"
                     Text= "{Binding Bank.Name, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Foreground="LightGreen" VerticalAlignment="Center" Text = " Dep: " />
                <TextBox x:Name="topDepNameBox" Foreground="Yellow" Background="Black" VerticalAlignment="Center" Width="50"
                     Text= "{Binding Dep.Name, UpdateSourceTrigger=PropertyChanged}" LostFocus="TextBoxEditNameHandler" KeyDown="TextBoxEditNameHandler" />
                <TextBlock Foreground="LightGreen" VerticalAlignment="Center" Text = " Client: " />
                <TextBox x:Name="topClientNameBox" Foreground="Yellow" Background="Black" VerticalAlignment="Center" Width="50"
                     Text= "{Binding Client.Name, UpdateSourceTrigger=PropertyChanged}" LostFocus="TextBoxEditNameHandler" KeyDown="TextBoxEditNameHandler" />
                <TextBlock Foreground="LightGreen" VerticalAlignment="Center" Text = " Account: Size " />
                <TextBox x:Name="accNameBox" Foreground="Yellow" Background="Black" VerticalAlignment="Center" Width="70"
                     Text= "{Binding Account.Size, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock Foreground="LightGreen" VerticalAlignment="Center" Text = "; Rate " />
                <TextBox x:Name="accRateBox" Foreground="Yellow" Background="Black" VerticalAlignment="Center" Width="50"
                     Text= "{Binding Account.Rate, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock Foreground="LightGreen" VerticalAlignment="Center" Text = "; Cap " />
                <CheckBox VerticalAlignment="Center" IsChecked= "{Binding Account.Cap, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Grid.ColumnSpan="3" Grid.Row="1">
                <TextBlock Foreground="LightGreen" VerticalAlignment="Center" Text = "Перевод со счета "/>
                <ComboBox x:Name="fromBox" ItemsSource="{Binding Bank.Accounts}" DisplayMemberPath="Number">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding FromSelectedCommand}" CommandParameter="{Binding ElementName=fromBox}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <TextBlock Foreground="LightGreen" VerticalAlignment="Center" Text = " на счет "/>
                <ComboBox x:Name="toBox" ItemsSource="{Binding Bank.Accounts}" DisplayMemberPath="Number" IsEnabled="{Binding FromIsSelected}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ToSelectedCommand}" CommandParameter="{Binding ElementName=toBox}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <TextBlock Foreground="LightGreen" VerticalAlignment="Center" Text = " Сумма "/>
                <TextBox Width="70" Foreground="Yellow" Background="Black" Text="{Binding TransferAmount}" IsEnabled="{Binding TransferEnabled}"/>
                <Button Style="{StaticResource headerBtn}" Content="Перевести" IsEnabled="{Binding TransferEnabled}" Command="{Binding DoTransferCommand}" />
            </StackPanel>
            <Button Grid.Column="0" Grid.Row="2" Content="Sort Departments" Style="{StaticResource headerBtn}" 
                    Command="{Binding SortByNameCommand}" CommandParameter="{Binding ElementName=depListView}">
            </Button>
            <Button Grid.Column="1" Grid.Row="2" Content="Sort Clients" Style="{StaticResource headerBtn}" IsEnabled="{Binding ClientSortEnabled}"
                    Command="{Binding SortByNameCommand}" CommandParameter="{Binding ElementName=clientListView}">
            </Button>
            <StackPanel Grid.Column="2" Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" IsEnabled="{Binding AccSortEnabled}">
                <TextBlock Text="Sort Accounts by " Foreground="LightBlue"  Style="{StaticResource headerText}"/>
                <Button Content="Number" Style="{StaticResource headerBtn}" 
                        Command="{Binding AccSortByNmbCommand}" CommandParameter="{Binding ElementName=accListView}"/>
                <Button Content="Size" Style="{StaticResource headerBtn}" Command="{Binding AccSortBySizeCommand}" CommandParameter="{Binding ElementName=accListView}"/>
                <Button Content="Rate" Style="{StaticResource headerBtn}" Command="{Binding AccSortByRateCommand}" CommandParameter="{Binding ElementName=accListView}"/>
            </StackPanel>
            <DataGrid RowHeaderStyle="{StaticResource BlackNavy}" x:Name="depGrid" Grid.Row="3" ItemsSource="{Binding Bank.Deps}" AutoGenerateColumns="False" 
                      Background="{StaticResource mainBckgr}">
                <DataGrid.ColumnHeaderStyle>
                    <Style BasedOn="{StaticResource ResourceKey=BlackNavy}"/>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.RowStyle>
                    <Style BasedOn="{StaticResource ResourceKey=BlackNavy}"/>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}"/>
                </DataGrid.Columns>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding DepSelectedCommand}" CommandParameter="{Binding ElementName=depGrid}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseRightButtonDown">
                        <i:InvokeCommandAction Command="{Binding RemoveDepCommand}" CommandParameter="{Binding ElementName=depGrid}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="CellEditEnding">
                        <i:InvokeCommandAction Command="{Binding EndDepEditCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="AddingNewItem">
                        <i:InvokeCommandAction Command="{Binding AddingDepCommand}" CommandParameter="mainWnd" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </DataGrid>
            <DataGrid Grid.Row="3" Grid.Column="1" RowHeaderStyle="{StaticResource BlackNavy}" x:Name="clientGrid"  ItemsSource="{Binding Clients}" 
                      AutoGenerateColumns="False" Background="{StaticResource mainBckgr}">
                <DataGrid.ColumnHeaderStyle>
                    <Style BasedOn="{StaticResource ResourceKey=BlackNavy}"/>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.RowStyle>
                    <Style BasedOn="{StaticResource ResourceKey=BlackNavy}"/>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}"/>
                </DataGrid.Columns>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding ClientSelectedCommand}" CommandParameter="{Binding ElementName=clientGrid}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseRightButtonDown">
                        <i:InvokeCommandAction Command="{Binding RemoveClientCommand}" CommandParameter="{Binding ElementName=clientGrid}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="CellEditEnding">
                        <i:InvokeCommandAction Command="{Binding EndClientEditCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="AddingNewItem">
                        <i:InvokeCommandAction Command="{Binding AddingClientCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </DataGrid>
            <DataGrid RowHeaderStyle="{StaticResource BlackNavy}" Background="{StaticResource mainBckgr}" x:Name="accGrid" Grid.Row="3" Grid.Column="2" ItemsSource="{Binding Accounts}" AutoGenerateColumns="False">
                <DataGrid.ColumnHeaderStyle>
                    <Style BasedOn="{StaticResource ResourceKey=BlackNavy}"/>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.RowStyle>
                    <Style BasedOn="{StaticResource ResourceKey=BlackNavy}"/>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Number" Binding="{Binding Number}"/>
                    <DataGridTextColumn Header="Size" Binding="{Binding Size}"/>
                    <DataGridTextColumn Header="Rate" Binding="{Binding Rate}"/>
                    <DataGridCheckBoxColumn Header="Cap" Binding="{Binding Cap}"/>
                </DataGrid.Columns>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding AccSelectedCommand}" CommandParameter="{Binding ElementName=accGrid}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseRightButtonDown">
                        <i:InvokeCommandAction Command="{Binding RemoveAccCommand}" CommandParameter="{Binding ElementName=accGrid}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="CellEditEnding">
                        <i:InvokeCommandAction Command="{Binding EndAccEditCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="AddingNewItem">
                        <i:InvokeCommandAction Command="{Binding AddingAccCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </DataGrid>
            <ListView x:Name="depListView" Grid.Row="4" Style="{StaticResource listViewStyle}" ItemsSource="{Binding Bank.Deps}">
                <ListView.Resources>
                    <ContextMenu x:Key="ItemContextMenu">
                        <MenuItem Header="Edit">
                            <TextBox x:Name="depNameBox" Text="{Binding Name}" LostFocus="TextBoxEditNameHandler" KeyDown="TextBoxEditNameHandler"/>
                        </MenuItem>
                    </ContextMenu>
                </ListView.Resources>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ListViewItemStyle1}">
                        <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Remove" Command="{Binding RemoveDepCommand}" IsEnabled="{Binding RemoveDepEnabled}"/>
                    </ContextMenu>
                </ListView.ContextMenu>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding DepSelectedCommand}" CommandParameter="{Binding ElementName=depListView}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListView.ToolTip>
                    <ToolTip  Style="{StaticResource ResourceKey=BlackNavy}" Content="Отделы"/>
                </ListView.ToolTip>
                <ListView.View>
                    <GridView x:Name="depGridView" ColumnHeaderContainerStyle="{StaticResource ResourceKey=BlackNavy}">
                        <GridViewColumn x:Name="depNameColumn" DisplayMemberBinding="{Binding Name}" >
                            <GridViewColumnHeader Command="{Binding SortByNameCommand}" CommandParameter="{Binding ElementName=depListView}" 
                                                  Template="{DynamicResource GridViewColumnHeaderControlTemplate1}">
                                Name
                            </GridViewColumnHeader>
                        </GridViewColumn>
                        <GridViewColumn  DisplayMemberBinding="{Binding VoidList}">
                            <GridViewColumnHeader Command="{Binding AddDepCommand}" CommandParameter="{Binding ElementName=depNameColumn}">
                                Add Dep
                            </GridViewColumnHeader>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
            <ListView x:Name="clientListView" Grid.Row="4" Grid.Column="1" Style="{StaticResource listViewStyle}" ItemsSource="{Binding Clients}">
                <ListView.Resources>
                    <ContextMenu x:Name="clientMenu" x:Key="ItemContextMenu">
                        <MenuItem Header="Edit">
                            <TextBox x:Name="clientNameBox" Text="{Binding Name}" LostFocus="TextBoxEditNameHandler" KeyDown="TextBoxEditNameHandler"/>
                        </MenuItem>
                    </ContextMenu>
                </ListView.Resources>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ListViewItemStyle1}">
                        <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Remove" Command="{Binding RemoveClientCommand}" IsEnabled="{Binding RemoveClientEnabled}" />
                    </ContextMenu>
                </ListView.ContextMenu>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding ClientSelectedCommand}" CommandParameter="{Binding ElementName=clientListView}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListView.ToolTip>
                    <ToolTip Style="{StaticResource ResourceKey=BlackNavy}" Content="Клиенты" />
                </ListView.ToolTip>
                <ListView.View>
                    <GridView x:Name="clientGridView" ColumnHeaderContainerStyle="{StaticResource ResourceKey=BlackNavy}">
                        <GridViewColumn x:Name="clientNameСolumn" DisplayMemberBinding="{Binding Name}">
                            <GridViewColumnHeader IsEnabled="{Binding ClientSortEnabled}" Command="{Binding SortByNameCommand}" 
                                                  CommandParameter="{Binding ElementName=clientListView}" 
                                                  Template="{DynamicResource GridViewColumnHeaderControlTemplate1}">
                                Name
                            </GridViewColumnHeader>
                        </GridViewColumn>
                        <GridViewColumn DisplayMemberBinding="{Binding VoidList}">
                            <GridViewColumnHeader Command="{Binding AddClientCommand}" CommandParameter="{Binding ElementName=clientNameСolumn}" Width="68" 
                                                  IsEnabled="{Binding ClientSortEnabled}">
                                Add Client
                            </GridViewColumnHeader>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
            <ListView x:Name="accListView" Grid.Row="4" Grid.Column="2" Style="{StaticResource listViewStyle}" ItemsSource="{Binding Accounts}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding AccSelectedCommand}" CommandParameter="{Binding ElementName=accListView}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Remove" Command="{Binding RemoveAccCommand}" IsEnabled="{Binding RemoveAccEnabled}"/>
                    </ContextMenu>
                </ListView.ContextMenu>
                <ListView.Resources>
                    <ContextMenu x:Key="ItemContextMenu">
                        <MenuItem Header="Edit">
                            <TextBox Text="{Binding Size}"/>
                            <TextBox Text="{Binding Rate}"/>
                            <CheckBox IsChecked="{Binding Cap}"/>
                        </MenuItem>
                    </ContextMenu>
                </ListView.Resources>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ListViewItemStyle1}">
                        <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ToolTip>
                    <ToolTip Style="{StaticResource ResourceKey=BlackNavy}" Content="Счета"/>
                </ListView.ToolTip>
                <ListView.View>
                    <GridView ColumnHeaderContainerStyle="{StaticResource ResourceKey=BlackNavy}">
                        <GridViewColumn DisplayMemberBinding="{Binding Number}">
                            <GridViewColumnHeader Command="{Binding AccSortByNmbCommand}" Template="{DynamicResource GridViewColumnHeaderControlTemplate1}"
                                                  CommandParameter="{Binding ElementName=accListView}" IsEnabled="{Binding AccSortEnabled}">
                                Number
                            </GridViewColumnHeader>
                        </GridViewColumn>
                        <GridViewColumn DisplayMemberBinding="{Binding Size}">
                            <GridViewColumnHeader Command="{Binding AccSortBySizeCommand}" CommandParameter="{Binding ElementName=accListView}" 
                                                  IsEnabled="{Binding AccSortEnabled}" Template="{DynamicResource GridViewColumnHeaderControlTemplate1}">
                                Size
                            </GridViewColumnHeader>
                        </GridViewColumn>
                        <GridViewColumn DisplayMemberBinding="{Binding Rate}">
                            <GridViewColumnHeader Command="{Binding AccSortByRateCommand}" CommandParameter="{Binding ElementName=accListView}" 
                                                  IsEnabled="{Binding AccSortEnabled}" Template="{DynamicResource GridViewColumnHeaderControlTemplate1}">
                                Rate
                            </GridViewColumnHeader>
                        </GridViewColumn>
                        <GridViewColumn Width="40" DisplayMemberBinding="{Binding Cap}">
                            <GridViewColumnHeader IsEnabled="False">
                                Cap
                            </GridViewColumnHeader>
                        </GridViewColumn>
                        <GridViewColumn DisplayMemberBinding="{Binding VoidList}">
                            <GridViewColumnHeader Command="{Binding AddAccountCommand}" CommandParameter="{Binding ElementName=accListView}" Width="80" IsEnabled="{Binding AccSortEnabled}">
                                Add Account
                            </GridViewColumnHeader>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
            <TreeView Grid.Row="5" Grid.ColumnSpan="3" Style="{StaticResource ResourceKey=BlackNavy}" ItemContainerStyle="{StaticResource ResourceKey=BlackNavy}" >
                <TreeViewItem Header="{Binding Bank.Name}" ItemsSource="{Binding Bank.Deps}" Style="{StaticResource ResourceKey=BlackNavy}">
                    <TreeViewItem.ItemTemplate>
                        <DataTemplate>
                            <TreeViewItem Header="{Binding Name}" ItemsSource="{Binding Clients}" Style="{StaticResource ResourceKey=BlackNavy}">
                                <TreeViewItem.ItemTemplate>
                                    <DataTemplate>
                                        <TreeViewItem Header="{Binding Name}" ItemsSource="{Binding Accounts}" Style="{StaticResource ResourceKey=BlackNavy}" 
                                                      ItemContainerStyle="{StaticResource ResourceKey=BlackNavy}"/>
                                    </DataTemplate>
                                </TreeViewItem.ItemTemplate>
                            </TreeViewItem>
                        </DataTemplate>
                    </TreeViewItem.ItemTemplate>
                </TreeViewItem>
            </TreeView>
        </Grid>
    </DockPanel>
</Window>
