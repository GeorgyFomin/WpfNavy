<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:WpfNavy"
        xmlns:viewmodels="clr-namespace:WpfNavy.ViewModels" xmlns:ClassLibrary="clr-namespace:ClassLibrary" x:Name="mainWnd" x:Class="WpfNavy.MainWindow"
        d:DataContext="{d:DesignInstance Type={x:Type viewmodels:MainViewModel}}"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" WindowStyle="None" ResizeMode="NoResize" Style="{StaticResource ResourceKey=BlackNavy}">
    <DockPanel Background="Transparent" >
        <DockPanel x:Name="topPanel" DockPanel.Dock="Top" Height="20" >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding DragCommand}" CommandParameter="{Binding ElementName=mainWnd}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <TextBlock Foreground="LightGreen" VerticalAlignment="Center" Text = "Bank "/>
            <TextBlock x:Name="bankName" Foreground="LightGreen" VerticalAlignment="Center" Text= "{Binding Bank.Name}" >
                <TextBlock.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Edit">
                            <TextBox Text="{Binding Bank.Name}">
                                <TextBox.ToolTip>Имя банка</TextBox.ToolTip>
                            </TextBox>
                        </MenuItem>
                    </ContextMenu>
                </TextBlock.ContextMenu>
            </TextBlock>
            <StackPanel Orientation="Horizontal" FlowDirection="RightToLeft" >
                <Button x:Name="CloseButton" Background="Transparent" BorderBrush="Transparent" Style="{StaticResource ButtonStyle1}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding CloseCommand}" CommandParameter="{Binding ElementName=mainWnd}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <StackPanel>
                        <fa:IconBlock Width="20" Padding="0 3 0 0" Icon="WindowClose" Foreground="{StaticResource mainBtnColor}"/>
                    </StackPanel>
                </Button>
                <Button x:Name="Maximize" Background="Transparent" BorderBrush="Transparent">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding MaximizeCommand}" CommandParameter="{Binding ElementName=mainWnd}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <StackPanel>
                        <fa:IconBlock x:Name="MaxIconBlock" Width="20" Padding="0 3 0 0" Icon="WindowMaximize" Foreground="{StaticResource mainBtnColor}"/>
                    </StackPanel>
                </Button>
                <Button x:Name="Minimize" Background="Transparent" BorderBrush="Transparent">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding MinimizeCommand}" CommandParameter="{Binding ElementName=mainWnd}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <StackPanel>
                        <fa:IconBlock Width="20" Padding="0 3 0 0" Icon="WindowMinimize" Foreground="{StaticResource mainBtnColor}"/>
                    </StackPanel>
                </Button>
                <Button Foreground="{StaticResource mainBtnColor}" Background="Transparent" BorderBrush="Transparent" Content="Random Bank">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding ResetBankCommand}" CommandParameter="{Binding ElementName=mainWnd}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </StackPanel>
        </DockPanel>
        <Grid Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width=".3*" x:Name="col0"/>
                <ColumnDefinition Width=".4*" x:Name="col1"/>
                <ColumnDefinition Width="*" x:Name="col2"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Content="Sort Departments" Style="{StaticResource headerBtn}" 
                    Command="{Binding SortByNameCommand}" CommandParameter="{Binding ElementName=depListView}">
            </Button>
            <Button Grid.Column="1" Content="Sort Clients" Style="{StaticResource headerBtn}" IsEnabled="{Binding ClientSortEnabled}"
                    Command="{Binding SortByNameCommand}" CommandParameter="{Binding ElementName=clientListView}">
            </Button>
            <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Center" IsEnabled="{Binding AccSortEnabled}">
                <TextBlock Text="Sort Accounts By " Foreground="LightBlue"  Style="{StaticResource headerText}"/>
                <Button Content="Number" Style="{StaticResource headerBtn}" 
                        Command="{Binding AccSortByNmbCommand}" CommandParameter="{Binding ElementName=accListView}"/>
                <Button Content="Size" Style="{StaticResource headerBtn}" Command="{Binding AccSortBySizeCommand}" CommandParameter="{Binding ElementName=accListView}"/>
                <Button Content="Rate" Style="{StaticResource headerBtn}" Command="{Binding AccSortByRateCommand}" CommandParameter="{Binding ElementName=accListView}"/>
            </StackPanel>
            <ListView x:Name="depListView" Grid.Row="1" Style="{StaticResource listViewStyle}" ItemsSource="{Binding Bank.Deps}">
                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Remove" Command="{Binding RemoveDepCommand}" IsEnabled="{Binding RemoveDepEnabled}"/>
                    </ContextMenu>
                </ListView.ContextMenu>
                <ListView.Resources>
                    <ContextMenu x:Key="ItemContextMenu">
                        <MenuItem Header="Edit">
                            <TextBox Text="{Binding Name}"/>
                        </MenuItem>
                    </ContextMenu>
                </ListView.Resources>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ListViewItemStyle1}">
                        <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                    </Style>
                </ListView.ItemContainerStyle>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding DepSelectedCommand}" CommandParameter="{Binding ElementName=depListView}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListView.ToolTip>
                    <ToolTip  Style="{StaticResource ResourceKey=BlackNavy}" Content="Отделы"/>
                </ListView.ToolTip>
                <ListView.View>
                    <GridView x:Name="depGridView" ColumnHeaderContainerStyle="{StaticResource ResourceKey=BlackNavy}">
                        <GridViewColumn x:Name="depNameColumn" DisplayMemberBinding="{Binding Name}" >
                            <GridViewColumnHeader Command="{Binding SortByNameCommand}" CommandParameter="{Binding ElementName=depListView}" 
                                                  Template="{DynamicResource GridViewColumnHeaderControlTemplate1}">
                                Name
                            </GridViewColumnHeader>
                        </GridViewColumn>
                        <GridViewColumn  DisplayMemberBinding="{Binding VoidList}">
                            <GridViewColumnHeader Command="{Binding AddDepCommand}" CommandParameter="{Binding ElementName=depNameColumn}">
                                Add Dep
                            </GridViewColumnHeader>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
            <ListView x:Name="clientListView" Grid.Row="1" Grid.Column="1" Style="{StaticResource listViewStyle}" ItemsSource="{Binding Clients}">
                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Remove" Command="{Binding RemoveClientCommand}" IsEnabled="{Binding RemoveClientEnabled}" />
                    </ContextMenu>
                </ListView.ContextMenu>
                <ListView.Resources>
                    <ContextMenu x:Key="ItemContextMenu">
                        <MenuItem Header="Edit">
                            <TextBox Text="{Binding Name}"/>
                        </MenuItem>
                    </ContextMenu>
                </ListView.Resources>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ListViewItemStyle1}">
                        <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                    </Style>
                </ListView.ItemContainerStyle>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding ClientSelectedCommand}" CommandParameter="{Binding ElementName=clientListView}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListView.ToolTip>
                    <ToolTip Style="{StaticResource ResourceKey=BlackNavy}" Content="Клиенты" />
                </ListView.ToolTip>
                <ListView.View>
                    <GridView x:Name="clientGridView" ColumnHeaderContainerStyle="{StaticResource ResourceKey=BlackNavy}">
                        <GridViewColumn x:Name="clientNameСolumn" DisplayMemberBinding="{Binding Name}">
                            <GridViewColumnHeader IsEnabled="{Binding ClientSortEnabled}" Command="{Binding SortByNameCommand}" 
                                                  CommandParameter="{Binding ElementName=clientListView}" 
                                                  Template="{DynamicResource GridViewColumnHeaderControlTemplate1}">
                                Name
                            </GridViewColumnHeader>
                        </GridViewColumn>
                        <GridViewColumn DisplayMemberBinding="{Binding VoidList}">
                            <GridViewColumnHeader Command="{Binding AddClientCommand}" CommandParameter="{Binding ElementName=clientNameСolumn}" Width="68" 
                                                  IsEnabled="{Binding ClientSortEnabled}">
                                Add Client
                            </GridViewColumnHeader>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
            <ListView x:Name="accListView" Grid.Row="1" Grid.Column="2" Style="{StaticResource listViewStyle}" ItemsSource="{Binding Accounts}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding AccSelectedCommand}" CommandParameter="{Binding ElementName=accListView}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Remove" Command="{Binding RemoveAccCommand}" IsEnabled="{Binding RemoveAccEnabled}"/>
                    </ContextMenu>
                </ListView.ContextMenu>
                <ListView.Resources>
                    <ContextMenu x:Key="ItemContextMenu">
                        <MenuItem Header="Edit">
                            <TextBox Text="{Binding Size}"/>
                            <TextBox Text="{Binding Rate}"/>
                            <CheckBox IsChecked="{Binding Cap}"/>
                        </MenuItem>
                    </ContextMenu>
                </ListView.Resources>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ListViewItemStyle1}">
                        <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ToolTip>
                    <ToolTip Style="{StaticResource ResourceKey=BlackNavy}" Content="Счета"/>
                </ListView.ToolTip>
                <ListView.View>
                    <GridView ColumnHeaderContainerStyle="{StaticResource ResourceKey=BlackNavy}">
                        <GridViewColumn DisplayMemberBinding="{Binding Number}">
                            <GridViewColumnHeader Command="{Binding AccSortByNmbCommand}" Template="{DynamicResource GridViewColumnHeaderControlTemplate1}"
                                                  CommandParameter="{Binding ElementName=accListView}" IsEnabled="{Binding AccSortEnabled}">
                                Number
                            </GridViewColumnHeader>
                        </GridViewColumn>
                        <GridViewColumn DisplayMemberBinding="{Binding Size}">
                            <GridViewColumnHeader Command="{Binding AccSortBySizeCommand}" CommandParameter="{Binding ElementName=accListView}" 
                                                  IsEnabled="{Binding AccSortEnabled}" Template="{DynamicResource GridViewColumnHeaderControlTemplate1}">
                                Size
                            </GridViewColumnHeader>
                        </GridViewColumn>
                        <GridViewColumn DisplayMemberBinding="{Binding Rate}">
                            <GridViewColumnHeader Command="{Binding AccSortByRateCommand}" CommandParameter="{Binding ElementName=accListView}" 
                                                  IsEnabled="{Binding AccSortEnabled}" Template="{DynamicResource GridViewColumnHeaderControlTemplate1}">
                                Rate
                            </GridViewColumnHeader>
                        </GridViewColumn>
                        <GridViewColumn Width="40" DisplayMemberBinding="{Binding Cap}">
                            <GridViewColumnHeader IsEnabled="False">
                                Cap
                            </GridViewColumnHeader>
                        </GridViewColumn>
                        <GridViewColumn DisplayMemberBinding="{Binding VoidList}">
                            <GridViewColumnHeader Command="{Binding AddAccountCommand}" CommandParameter="{Binding ElementName=accListView}" Width="80" IsEnabled="{Binding AccSortEnabled}">
                                Add Account
                            </GridViewColumnHeader>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>
    </DockPanel>
</Window>
